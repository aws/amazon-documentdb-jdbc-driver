name: Asssemble Tableau Connector
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      sign:
        description: Build and Sign Artifacts (for release only)
        type: boolean
        required: false
        default: false
env:
  #SIGNING_ENABLED: ${{ github.event.inputs.sign }}
  SIGNING_ENABLED: true

jobs:
  build-taco:
    name: Assemble Tableau Connector
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Ensure Executable Permissions
        run: chmod a+x ./tableau-connector/build.sh
      - name: Assemble Tableau Connector
        run: ./tableau-connector/build.sh
      - name: View assembled file
        run: ls -l tableau-connector/target
      - name: Add Version to Taco file
        run: |
          file="./gradle.properties"
          MAJOR_VERSION=$(grep "MAJOR_VERSION" ${file} | cut -d'=' -f2)
          MINOR_VERSION=$(grep "MINOR_VERSION" ${file} | cut -d'=' -f2)
          PATCH_VERSION=$(grep "PATCH_VERSION" ${file} | cut -d'=' -f2)
          mv  tableau-connector/target/documentdbjdbc.taco tableau-connector/target/documentdbjdbc-${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}.taco

      - name: "Configure AWS credentials"
        if: ${{env.SIGNING_ENABLED == 'true'}}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 3600

      - name: Sign Executables
        id: sign-executables-32
        shell: bash
        run: |
          
          echo "Sign is set to ${SIGNING_ENABLED}"
          if [[ $SIGNING_ENABLED = "true" ]]
          then
            echo "Signing is enabled. Will attempt to sign"
            pwd
            ls -l tableau-connector/target
          
            echo "Installing jq"
            sudo apt-get install jq
            file="./gradle.properties"
            MAJOR_VERSION=$(grep "MAJOR_VERSION" ${file} | cut -d'=' -f2)
            MINOR_VERSION=$(grep "MINOR_VERSION" ${file} | cut -d'=' -f2)
            PATCH_VERSION=$(grep "PATCH_VERSION" ${file} | cut -d'=' -f2)
          
            # Upload unsigned .exe to S3 Bucket
            echo "Obtaining version id and uploading unsigned .exe to S3 Bucket"
            version_id=$( aws s3api put-object --bucket ${{ secrets.AWS_UNSIGNED_BUCKET }} --key ${{ secrets.AWS_KEY }} --body ./tableau-connector/target/documentdbjdbc-${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}.taco  --acl bucket-owner-full-control | jq '.VersionId' )
            job_id=""
            # Attempt to get Job ID from bucket tagging, will retry up to 3 times before exiting with a failure code.
            # Will sleep for 5 seconds between retries.
          
            echo "Attempt to get Job ID from bucket tagging, will retry up to 3 times before exiting with a failure code."
            for (( i=0; i<3; i++ ))
            do  
              # Get job ID
              id=$( aws s3api get-object-tagging --bucket ${{ secrets.AWS_UNSIGNED_BUCKET }} --key ${{ secrets.AWS_KEY }} --version-id ${version_id} | jq -r '.TagSet[0].Value' )
              if [ $id != "null" ]
              then
                job_id=$id
                break
              fi
          
              echo "Will sleep for 5 seconds between retries."
              sleep 5s
            done
          
            if [[ $job_id = "" ]]
            then
               echo "Exiting because unable to retrieve job ID"
               exit 1
            fi
          
            # Poll signed S3 bucket to see if the signed artifact is there
            echo "Poll signed S3 bucket to see if the signed artifact is there"
            aws s3api wait object-exists --bucket ${{ secrets.AWS_SIGNED_BUCKET }} --key ${{ secrets.AWS_KEY }}-${job_id}.taco
          
            # Get signed EXE from S3
            echo "Get signed EXE from S3"
            aws s3api get-object --bucket ${{ secrets.AWS_SIGNED_BUCKET }} --key ${{ secrets.AWS_KEY }}-${job_id} ./tableau-connector/target/documentdbjdbc-${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}-signed.taco
            echo "Signing completed"
            ls -l tableau-connector/target
          else
            echo "Signing will be skipped"
          fi

      - name: Upload Build
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: documentdbjdbc.taco
          path: ./tableau-connector/target/*.taco
