# Copyright <2020> Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

name: Amazon DocumentDB JDBC Driver

on:
  # Trigger the workflow on pull request,
  # but only for the master/develop branches
  pull_request:
    branches:
      - master
      - develop
  # Trigger on-demand
  workflow_dispatch:
    inputs:
      testWithoutDocumnetDb:
        description: Test without DocumentDB? (1/0)
        required: false
        default: '1'
      mavenFilesPreparation:
        description: Prepare files to publish in maven repo? (1/0)
        required: false
        default: '0'

jobs:
  build:
    env:
      DOC_DB_KEYPAIR: ${{secrets.DOC_DB_KEYPAIR}}
      TRUSTSTORE_PASSWORD: ${{secrets.TRUSTSTORE_PASSWORD}}
      DOC_DB_USER_NAME: ${{secrets.DOC_DB_USER_NAME}}
      DOC_DB_PASSWORD: ${{secrets.DOC_DB_PASSWORD}}
      DOC_DB_USER: ${{secrets.DOC_DB_USER}}
      DOC_DB_HOST: ${{secrets.DOC_DB_HOST}}
      OMIT_DOCUMENTDB: ${{ github.event.inputs.testWithoutDocumnetDb || '0' }}
      RUN_REMOTE_INTEGRATION_TESTS: ${{ github.event.inputs.testWithoutDocumnetDb && 'false' || 'true' }}
      DOC_DB_LOCAL_PORT: 27019
      DOC_DB_REMOTE_PORT: 27017
      DOC_DB_PRIV_KEY_FILE: ~/certs/docdb-sshtunnel.pem
      GPG_SIGN_KEY: ${{secrets.GPG_SIGN_KEY}}
      GPG_KEY_PASSWORD: ${{secrets.GPG_KEY_PASSWORD}}
      GPG_KEY_SECRET_KEY_RING: ${{secrets.GPG_KEY_SECRET_KEY_RING}}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        fetch-depth: 0
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Extract key-pair into file
      if: ${{ env.OMIT_DOCUMENTDB == '0' }}
      run: |
        mkdir -p ~/certs
        echo "$DOC_DB_KEYPAIR" > ~/certs/docdb-sshtunnel.pem
        chmod 400 ~/certs/docdb-sshtunnel.pem
    - name: Run SSH tunnel to DocumentDB server
      if: ${{ env.OMIT_DOCUMENTDB == '0' }}
      run: |
        ssh -f -N -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/certs/docdb-sshtunnel.pem -L $DOC_DB_LOCAL_PORT:${{secrets.DOC_DB_HOST}}:$DOC_DB_REMOTE_PORT ${{secrets.DOC_DB_USER}}
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle with local and optional remote DocumentDB tests
      run: |
        ./gradlew build -PrunRemoteIntegrationTests=$RUN_REMOTE_INTEGRATION_TESTS
    - name: Extract gpg-key-pair into file
      #if: ${{ github.event.inputs.mavenFilesPreparation }}
      run: |
        echo "$GPG_KEY_SECRET_KEY_RING" > secring.kbx.b64
        base64 -d secring.kbx.b64 > secring.kbx
    - name: Prepare to publish to Maven
      #if: ${{ github.event.inputs.mavenFilesPreparation }}
      run: |
        ./gradlew build publishToMavenLocal -Psigning.secretKeyRingFile=secring.kbx -Psigning.password=$GPG_KEY_PASSWORD -Psigning.keyId=$GPG_SIGN_KEY
    - name: Copy Files for Maven
      #if: ${{ github.event.inputs.mavenFilesPreparation }}
      run: | 
        mkdir output/maven
        name=$(ls build/libs | grep documentdb-jdbc.*-all.jar.asc)
        vers=$(awk -F- '{print $3}' <<<"$name")
        cp ~/.m2/repository/software/amazon/documentdb/jdbc/documentdb-jdbc/$vers/documentdb-jdbc-$vers.jar output/maven
        cp ~/.m2/repository/software/amazon/documentdb/jdbc/documentdb-jdbc/$vers/documentdb-jdbc-$vers.jar.asc output/maven
        cp ~/.m2/repository/software/amazon/documentdb/jdbc/documentdb-jdbc/$vers/documentdb-jdbc-$vers-javadoc.jar output/maven
        cp ~/.m2/repository/software/amazon/documentdb/jdbc/documentdb-jdbc/$vers/documentdb-jdbc-$vers-javadoc.jar.asc output/maven
        cp ~/.m2/repository/software/amazon/documentdb/jdbc/documentdb-jdbc/$vers/documentdb-jdbc-$vers-sources.jar output/maven
        cp ~/.m2/repository/software/amazon/documentdb/jdbc/documentdb-jdbc/$vers/documentdb-jdbc-$vers-sources.jar.asc output/maven
        cp ~/.m2/repository/software/amazon/documentdb/jdbc/documentdb-jdbc/$vers/documentdb-jdbc-$vers.pom output/maven
        cp ~/.m2/repository/software/amazon/documentdb/jdbc/documentdb-jdbc/$vers/documentdb-jdbc-$vers.pom.asc output/maven
        cd output/mave
        jar -cvf bundle.jar *
        rm documentdb-jdbc-$vers.jar
        rm documentdb-jdbc-$vers.jar.asc
        rm documentdb-jdbc-$vers-javadoc.jar
        rm documentdb-jdbc-$vers-javadoc.jar.asc
        rm documentdb-jdbc-$vers-sources.jar
        rm documentdb-jdbc-$vers-sources.jar.asc
        rm documentdb-jdbc-$vers.pom
        rm documentdb-jdbc-$vers.pom.asc
    - name: Copy Build
      run: |
        mkdir output
        mkdir output/jarfile
        mkdir output/reports
        cp build/libs/*.jar output/jarfile
        cp -R build/reports output/reports
    - name: Upload Build
      uses: actions/upload-artifact@v1
      with:
        name: output
        path: output
    - name: Publish Summary Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.9
      if: always()
      with:
        files: build/test-results/**/*.xml
    - name: Publish Detailed Test Report
      if: always()
      uses: scacap/action-surefire-report@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        report_paths: '**/build/test-results/test/TEST-*.xml'
    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.0.1
      with:
        jacoco-csv-file: 'build/reports/jacoco/test/jacocoTestReport.csv'
        generate-branches-badge: true
    - name: Commit Coverage Badge
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_options: '--allow-empty --no-verify'
        commit_message: Commit Code Coverage Badge
        file_pattern: '*.svg'
        skip_fetch: true
        skip_dirty_check: true
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: build/reports/jacoco/
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
